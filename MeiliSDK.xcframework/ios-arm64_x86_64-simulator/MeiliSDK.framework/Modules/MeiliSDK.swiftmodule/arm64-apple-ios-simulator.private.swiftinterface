// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
// swift-module-flags: -target arm64-apple-ios16.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name MeiliSDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
import DeveloperToolsSupport
import Foundation
@_exported import MeiliSDK
import PDFKit
import Swift
import SwiftUI
import UIKit
import WebKit
import _Concurrency
import _MapKit_SwiftUI
import _StringProcessing
import _SwiftConcurrencyShims
import os.log
import os















public struct MeiliStyles {
  public init(fontName: Swift.String? = nil)
}




























public enum MeiliFlow {
  case direct
  case connect
  public static func == (a: MeiliSDK.MeiliFlow, b: MeiliSDK.MeiliFlow) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public struct MeiliView : SwiftUI.View {
  public init(currentFlow: MeiliSDK.MeiliFlow = .direct, ptid: Swift.String, styles: MeiliSDK.MeiliStyles)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s8MeiliSDK0A4ViewV4bodyQrvp", 0) __
}




extension MeiliSDK.MeiliFlow : Swift.Equatable {}
extension MeiliSDK.MeiliFlow : Swift.Hashable {}
